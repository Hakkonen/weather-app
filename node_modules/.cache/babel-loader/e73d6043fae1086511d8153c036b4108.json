{"ast":null,"code":"import _slicedToArray from\"/Users/synesis/Documents/GitHub/weather-app/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import useAxios from'axios-hooks';import{LineChart,Line,XAxis,Tooltip}from'recharts';function Forecast(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,1),hourly=_useState2[0];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),renderLineChart=_useState4[0],setRenderLineChart=_useState4[1];var chartData=[];var _useAxios=useAxios(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(props.location,\"&units=metric&appid=d233733ddc2dfd6e8b9278bce7c20c19\")),_useAxios2=_slicedToArray(_useAxios,1),_useAxios2$=_useAxios2[0],loading=_useAxios2$.loading,error=_useAxios2$.error,response=_useAxios2$.response;useEffect(function(){if(!response){console.log('loading');}else{for(var key in response.data.list){var timeKey=response.data.list[key].dt_txt.substr(11,2)+'h';if(timeKey[0]==='0'){timeKey=timeKey.slice(1);}chartData.push({// key: key, \ntime:timeKey,temp:response.data.list[key].main.temp,pv:0,amt:0});}console.log(chartData);console.log(chartData[0]);for(var x=0;x<8;x++){hourly.push(chartData[x]);}console.log(hourly);setRenderLineChart(/*#__PURE__*/React.createElement(LineChart,{width:window.innerWidth*75/100,height:150,data:hourly},/*#__PURE__*/React.createElement(Line,{type:\"monotone\",dataKey:\"temp\",stroke:\"rgb(254,203,54)\"}),/*#__PURE__*/React.createElement(XAxis,{dataKey:\"time\"}),/*#__PURE__*/React.createElement(Tooltip,{wrapperStyle:{width:100,backgroundColor:'#f5f5f5'}})));}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[response]);if(loading)return/*#__PURE__*/React.createElement(\"p\",{className:\"text-center text-gold\"},\"Loading!\");if(error)return/*#__PURE__*/React.createElement(\"p\",null,\"Error!\");return/*#__PURE__*/React.createElement(\"div\",{className:\"d-lg-flex container module-dimensions justify-content-center align-items-center w-75 text-gold\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row pt-5\"},/*#__PURE__*/React.createElement(\"span\",{className:\"col text-center\"},\"24 Hour Forecast\")),/*#__PURE__*/React.createElement(\"div\",{className:\"row pt-5 justify-content-center align-items-center\"},renderLineChart));}export default Forecast;","map":{"version":3,"sources":["/Users/synesis/Documents/GitHub/weather-app/weather-app/src/components/Forecast.js"],"names":["React","useState","useEffect","useAxios","LineChart","Line","XAxis","Tooltip","Forecast","props","hourly","renderLineChart","setRenderLineChart","chartData","location","loading","error","response","console","log","key","data","list","timeKey","dt_txt","substr","slice","push","time","temp","main","pv","amt","x","window","innerWidth","width","backgroundColor"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,KAA1B,CAAiCC,OAAjC,KAAgD,UAAhD,CAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,eACFR,QAAQ,CAAC,EAAD,CADN,wCACbS,MADa,8BAE0BT,QAAQ,EAFlC,yCAEdU,eAFc,eAEGC,kBAFH,eAGrB,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CAHqB,cAIgBV,QAAQ,8DACaM,KAAK,CAACK,QADnB,yDAJxB,kEAIbC,OAJa,aAIbA,OAJa,CAIJC,KAJI,aAIJA,KAJI,CAIGC,QAJH,aAIGA,QAJH,CAQrBf,SAAS,CAAC,UAAM,CACZ,GAAI,CAACe,QAAL,CAAe,CACXC,OAAO,CAACC,GAAR,CAAY,SAAZ,EACH,CAFD,IAEO,CACH,IAAK,GAAMC,CAAAA,GAAX,GAAkBH,CAAAA,QAAQ,CAACI,IAAT,CAAcC,IAAhC,CAAsC,CAClC,GAAIC,CAAAA,OAAO,CAAGN,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBF,GAAnB,EAAwBI,MAAxB,CAA+BC,MAA/B,CAAsC,EAAtC,CAAyC,CAAzC,EAA8C,GAA5D,CACA,GAAIF,OAAO,CAAC,CAAD,CAAP,GAAe,GAAnB,CAAwB,CAACA,OAAO,CAAGA,OAAO,CAACG,KAAR,CAAc,CAAd,CAAV,CAA2B,CACpDb,SAAS,CAACc,IAAV,CAAe,CACX;AACAC,IAAI,CAAEL,OAFK,CAGXM,IAAI,CAAEZ,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBF,GAAnB,EAAwBU,IAAxB,CAA6BD,IAHxB,CAIXE,EAAE,CAAE,CAJO,CAIJC,GAAG,CAAE,CAJD,CAAf,EAMH,CACDd,OAAO,CAACC,GAAR,CAAYN,SAAZ,EACAK,OAAO,CAACC,GAAR,CAAYN,SAAS,CAAC,CAAD,CAArB,EACA,IAAI,GAAIoB,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAG,CAAnB,CAAsBA,CAAC,EAAvB,CAA2B,CACvBvB,MAAM,CAACiB,IAAP,CAAYd,SAAS,CAACoB,CAAD,CAArB,EACH,CACDf,OAAO,CAACC,GAAR,CAAYT,MAAZ,EACAE,kBAAkB,cACd,oBAAC,SAAD,EAAW,KAAK,CAAGsB,MAAM,CAACC,UAAR,CAAoB,EAApB,CAAuB,GAAzC,CAA8C,MAAM,CAAE,GAAtD,CAA2D,IAAI,CAAEzB,MAAjE,eACI,oBAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,MAA9B,CAAqC,MAAM,CAAC,iBAA5C,EADJ,cAGI,oBAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EAHJ,cAKI,oBAAC,OAAD,EAAS,YAAY,CAAE,CAAE0B,KAAK,CAAE,GAAT,CAAcC,eAAe,CAAE,SAA/B,CAAvB,EALJ,CADc,CAAlB,CASH,CACL;AACC,CA/BQ,CA+BN,CAACpB,QAAD,CA/BM,CAAT,CAiCA,GAAIF,OAAJ,CAAa,mBAAO,yBAAG,SAAS,CAAC,uBAAb,aAAP,CACb,GAAIC,KAAJ,CAAW,mBAAO,sCAAP,CAEX,mBACI,2BAAK,SAAS,CAAC,gGAAf,eACI,2BAAK,SAAS,CAAC,UAAf,eACI,4BAAM,SAAS,CAAC,iBAAhB,qBADJ,CADJ,cAKI,2BAAK,SAAS,CAAC,oDAAf,EACKL,eADL,CALJ,CADJ,CAWH,CAED,cAAeH,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport useAxios from 'axios-hooks'\nimport { LineChart, Line, XAxis, Tooltip } from 'recharts'\n\nfunction Forecast(props) {\n    const [ hourly ] = useState([])\n    const [renderLineChart, setRenderLineChart ] = useState()\n    const chartData = []\n    const [{loading, error, response}] = useAxios(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${props.location}&units=metric&appid=d233733ddc2dfd6e8b9278bce7c20c19`\n    )\n\n    useEffect(() => {\n        if (!response) {\n            console.log('loading')\n        } else {\n            for (const key in response.data.list) {\n                let timeKey = response.data.list[key].dt_txt.substr(11,2) + 'h'\n                if (timeKey[0] === '0') {timeKey = timeKey.slice(1)}\n                chartData.push({\n                    // key: key, \n                    time: timeKey, \n                    temp: response.data.list[key].main.temp, \n                    pv: 0, amt: 0\n                },)\n            }\n            console.log(chartData)\n            console.log(chartData[0])\n            for(let x = 0; x < 8; x++) {\n                hourly.push(chartData[x])\n            }\n            console.log(hourly)\n            setRenderLineChart(\n                <LineChart width={(window.innerWidth)*75/100} height={150} data={hourly}>\n                    <Line type=\"monotone\" dataKey=\"temp\" stroke=\"rgb(254,203,54)\" />\n                    {/* <CartesianGrid stroke=\"rgb(254,203,54)\" /> */}\n                    <XAxis dataKey=\"time\" />\n                    {/* <YAxis /> */}\n                    <Tooltip wrapperStyle={{ width: 100, backgroundColor: '#f5f5f5' }} />\n                </LineChart>\n            )\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [response])\n\n    if (loading) return <p className='text-center text-gold'>Loading!</p>\n    if (error) return <p>Error!</p>\n    \n    return (\n        <div className='d-lg-flex container module-dimensions justify-content-center align-items-center w-75 text-gold'>\n            <div className='row pt-5'>\n                <span className='col text-center'>24 Hour Forecast</span>\n            </div>\n\n            <div className='row pt-5 justify-content-center align-items-center'>\n                {renderLineChart}\n            </div>\n        </div>\n    )\n}\n\nexport default Forecast"]},"metadata":{},"sourceType":"module"}